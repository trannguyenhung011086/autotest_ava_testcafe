cache:
    paths:
        - node_modules/

stages:
    - build
    - test_prod
    - cleanup

before_script:
    - docker info

build:
    stage: build
    script:
        - docker build -t hung/testcafe .
        # - yarn install

api_sale_relate_prod:
    stage: test_prod
    script:
        # - NODE_ENV=prod MODE=ci yarn run test_api_sale_relate --match='!*skip-prod*'
        - docker run --shm-size=2g --network=host --name ${CI_JOB_ID}_api_sale_relate_prod -i -e NODE_ENV=prod -v $(pwd)/:/dockertests hung/testcafe yarn run test_api_sale_relate_ci --match='!*skip-prod*'
    only:
        - schedules
        - master

api_sale_not_relate_prod:
    stage: test_prod
    script:
        # - NODE_ENV=prod MODE=ci yarn run test_api_sale_not_relate --match='!*skip-prod*'
        - docker run --shm-size=2g --network=host --name ${CI_JOB_ID}_api_sale_not_relate_prod -i -e NODE_ENV=prod -v $(pwd)/:/dockertests hung/testcafe yarn run test_api_sale_not_relate_ci --match='!*skip-prod*'
    only:
        - schedules
        - master

# api_checkout_prod:
#     stage: test_prod
#     script:
#         # - NODE_ENV=prod MODE=ci yarn run test_api_checkout --match='!*skip-prod*'
#         - docker run --shm-size=2g --network=host --name ${CI_JOB_ID}_api_checkout_prod -i -e NODE_ENV=prod -v $(pwd)/:/dockertests hung/testcafe yarn run test_api_checkout_ci --match='!*skip-prod*'
#     only:
#         - schedules
#         - master

# chromium_prod:
#     stage: test_prod
#     script:
#         - docker run --shm-size=2g --network=host --name ${CI_JOB_ID}_chromium_prod -i -e NODE_ENV=prod -v $(pwd)/:/dockertests hung/testcafe yarn run test_chromium_ci
#     after_script:
#         - docker cp ${CI_JOB_ID}_chromium_prod:/home/tester/report/junit_chromium.xml junit_chromium.xml
#     artifacts:
#         expire_in: 1 week
#         reports:
#             junit: junit_chromium.xml
#     only:
#         - schedules
#         - master

# firefox_prod:
#     stage: test_prod
#     script:
#         - docker run --shm-size=2g --network=host --name ${CI_JOB_ID}_firefox_prod -i -e NODE_ENV=prod -v $(pwd)/:/dockertests hung/testcafe yarn run test_firefox_ci
#     after_script:
#         - docker cp ${CI_JOB_ID}_firefox_prod:/home/tester/report/junit_firefox.xml junit_firefox.xml
#     artifacts:
#         expire_in: 1 week
#         reports:
#             junit: junit_firefox.xml
#     only:
#         - schedules
#         - master

# mobile_emu_prod:
#     stage: test_prod
#     script:
#         - docker run --shm-size=2g --network=host --name ${CI_JOB_ID}_mobile_emu_prod -i -e NODE_ENV=prod -v $(pwd)/:/dockertests hung/testcafe yarn run test_mobile_emu_ci
#     after_script:
#         - docker cp ${CI_JOB_ID}_mobile_emu_prod:/home/tester/report/junit_mobile_emu.xml junit_mobile_emu.xml
#     artifacts:
#         expire_in: 1 week
#         reports:
#             junit: junit_mobile_emu.xml
#     only:
#         - schedules
#         - master

cleanup:
    stage: cleanup
    script:
        - docker ps -a
        - docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)
        - docker container prune -f && docker volume prune -f
    when: always
